{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","Statistics","props","good","neutral","bad","countTotal","calculateFeedback","toFixed","FeedbackOptions","options","onFeedbackBtnClick","map","el","type","onClick","Notification","message","App","state","value","setState","prevState","Object","keys","this","Statistic","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAeeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCiBQC,MArBf,SAAoBC,GAClB,IAAQC,EAAsDD,EAAtDC,KAAMC,EAAgDF,EAAhDE,QAASC,EAAuCH,EAAvCG,IAAKC,EAAkCJ,EAAlCI,WAAYC,EAAsBL,EAAtBK,kBACxC,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,OACX,oDAAuBC,IAAoBC,QAAQ,GAAnD,WCWSC,MAnBf,YAA2D,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,mBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBAAiBC,KAAK,SAASC,QAASJ,EAAmBE,GAA3D,SACGA,GADUA,SCGRG,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCGPC,E,4MACJC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,mBAAqB,SAACS,GAAD,OAAW,WAC9B,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAQE,EAAUF,GAAS,Q,EAIhCd,WAAa,WACX,OAAO,EAAKa,MAAMhB,KAAO,EAAKgB,MAAMf,QAAU,EAAKe,MAAMd,K,EAG3DE,kBAAoB,WAClB,OAAO,EAAKY,MAAMhB,KAA0B,IAAlB,EAAKgB,MAAMhB,KAAc,EAAKG,aAAe,G,4CAGzE,WACE,IAAMI,EAAUa,OAAOC,KAAKC,KAAKN,OAEjC,OACE,gCACE,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEW,QAASA,EACTC,mBAAoBc,KAAKd,uBAG7B,cAAC,EAAD,CAASZ,MAAM,aAAf,SACG0B,KAAKnB,aACJ,cAACoB,EAAD,CACEvB,KAAMsB,KAAKN,MAAMhB,KACjBC,QAASqB,KAAKN,MAAMf,QACpBC,IAAKoB,KAAKN,MAAMd,IAChBC,WAAYmB,KAAKnB,WACjBC,kBAAmBkB,KAAKlB,oBAG1B,cAAC,EAAD,CAAcU,QAAQ,+B,GA1ChBU,aAkDHT,ICnDfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.81264042.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\n\nfunction Statistics(props) {\n  const { good, neutral, bad, countTotal, calculateFeedback } = props;\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {countTotal()}</p>\n      <p>Positive feedback: {calculateFeedback().toFixed(0)}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotal: PropTypes.func.isRequired,\n  calculateFeedback: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\n\nfunction FeedbackOptions({ options, onFeedbackBtnClick }) {\n  return (\n    <div>\n      {options.map((el) => {\n        return (\n          <button key={el} type=\"button\" onClick={onFeedbackBtnClick(el)}>\n            {el}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onFeedbackBtnClick: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistic\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onFeedbackBtnClick = (value) => () => {\n    this.setState((prevState) => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotal = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  calculateFeedback = () => {\n    return this.state.good ? (this.state.good * 100) / this.countTotal() : 0;\n  };\n\n  render() {\n    const options = Object.keys(this.state);\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onFeedbackBtnClick={this.onFeedbackBtnClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotal() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              countTotal={this.countTotal}\n              calculateFeedback={this.calculateFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}